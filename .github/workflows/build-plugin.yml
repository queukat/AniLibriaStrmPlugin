name: build-plugin

on:
  push:
    tags: ['*']
  workflow_dispatch:

permissions:
  contents: write
  packages: read

env:
  JELLYFIN_NUGET_PAT: ${{ secrets.JELLYFIN_NUGET_PAT }}
  JELLYFIN_NUGET_USER: queukat

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # ───────────────────────────────────────
      - uses: actions/checkout@v4

      # Сносим старые nuget.config, чтобы не перебивали авторизацию
      - name: Remove local NuGet configs
        run: find . -iname 'nuget.config' -delete

      # .NET 8 + авторизация к feed'у Jellyfin
      - name: Setup .NET + GitHub Packages auth
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x                   # SDK-8 собирает проекты net8.0
          source-url: https://nuget.pkg.github.com/jellyfin/index.json
          owner: ${{ env.JELLYFIN_NUGET_USER }}
        env:
          NUGET_AUTH_TOKEN: ${{ env.JELLYFIN_NUGET_PAT }}

      # Проверяем итоговый список NuGet-источников
      - name: Show effective NuGet sources
        run: dotnet nuget list source

      # ────────────────────────────────────────────────
      # Сборка JPRM (сам формирует zip и meta.json)
      - name: Build Jellyfin plugin ➜ zip + meta.json
        uses: oddstr13/jellyfin-plugin-repository-manager@v1.1.1
        id: jprm
        with:
          dotnet-target: net8.0                  # соответствует TargetFramework в .csproj

      # Контрольные суммы (по желанию)
      - name: Generate checksums
        run: |
          md5sum    "${{ steps.jprm.outputs.artifact }}" > "${{ steps.jprm.outputs.artifact }}.md5"
          sha256sum "${{ steps.jprm.outputs.artifact }}" > "${{ steps.jprm.outputs.artifact }}.sha256"

      # ────────────────────────────────────────────────
      # Релиз
      - name: Release on GitHub
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: AniLibria STRM ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            ${{ steps.jprm.outputs.artifact }}
            ${{ steps.jprm.outputs.artifact }}.md5
            ${{ steps.jprm.outputs.artifact }}.sha256
